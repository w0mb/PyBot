import asyncio
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ChatJoinRequest
import json
#üòàPREMIUM –°–ª–∏—Ç—ã–µ —Å—Å—É—á–∫–∏ PREMIUMüòà
#@test_oplata_bot
API_TOKEN = '8188712922:AAHyTWd6xgxOwEbYTS7oAlLNl-2_oLOleyQ'
CHAT_ID = -1002248182741
DAILY_LIMIT = 500

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞—è–≤–∫–∞—Ö
DATA_FILE = 'join_requests.json'

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
def load_data():
    try:
        with open(DATA_FILE, 'r') as f:
            data = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        data = {'count': 0, 'last_reset': str(datetime.now().date())}
    return data

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
def save_data(data):
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f)

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞
def update_request_count():
    data = load_data()
    today = str(datetime.now().date())

    # –°–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞, –µ—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å
    if data['last_reset'] != today:
        data = {'count': 0, 'last_reset': today}

    data['count'] += 1
    save_data(data)
    return data['count']

@dp.chat_join_request(F.chat.id == CHAT_ID)
async def auto_approve_join_request(update: ChatJoinRequest, bot: Bot):
    try:
        current_count = update_request_count()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç
        if current_count > DAILY_LIMIT:
            print(f"–õ–∏–º–∏—Ç –∑–∞—è–≤–æ–∫ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç: {current_count}")
            return

        await bot.approve_chat_join_request(chat_id=update.chat.id, user_id=update.from_user.id)
        print(f"–ó–∞—è–≤–∫–∞ –æ—Ç {update.from_user.id} –æ–¥–æ–±—Ä–µ–Ω–∞. –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {current_count}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
